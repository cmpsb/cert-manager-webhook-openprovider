// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ZoneListZonesResponseData ListZonesResponseData
// Example: {"results":[{"active":true,"creation_date":"2012-02-05 7:37:28","dnskey":"","history":[{"date":"2019-06-19 17:40:09","is":true,"source":"","was":""}],"id":12345,"ip":"127.0.0.1","is_deleted":false,"is_shadow":false,"is_spamexperts_enabled":false,"modification_date":"2018-11-28 6:57:05","name":"domain.com","premium_dns":{"sectigo":{"autorenew":false,"order_date":"2021-08-05 7:37:28","renewal_date":"2022-11-28 6:57:05","secured":false,"website_id":123456}},"provider":"sectigo","records":[{"creation_date":"","ip":"127.0.0.1","modification_date":"","name":"domain.com","prio":1,"ttl":900,"type":"CNAME","value":"abcd.domain.com"}],"reseller_id":123456,"type":"master"}],"total":1888}
//
// swagger:model zoneListZonesResponseData
type ZoneListZonesResponseData struct {

	// Array of search results
	Results []*ZoneZone `json:"results"`

	// Number of search results
	Total int32 `json:"total,omitempty"`
}

// Validate validates this zone list zones response data
func (m *ZoneListZonesResponseData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResults(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ZoneListZonesResponseData) validateResults(formats strfmt.Registry) error {
	if swag.IsZero(m.Results) { // not required
		return nil
	}

	for i := 0; i < len(m.Results); i++ {
		if swag.IsZero(m.Results[i]) { // not required
			continue
		}

		if m.Results[i] != nil {
			if err := m.Results[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("results" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this zone list zones response data based on the context it is used
func (m *ZoneListZonesResponseData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateResults(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ZoneListZonesResponseData) contextValidateResults(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Results); i++ {

		if m.Results[i] != nil {
			if err := m.Results[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("results" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("results" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ZoneListZonesResponseData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ZoneListZonesResponseData) UnmarshalBinary(b []byte) error {
	var res ZoneListZonesResponseData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

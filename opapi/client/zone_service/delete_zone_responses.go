// Code generated by go-swagger; DO NOT EDIT.

package zone_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"wukl.net/projects/cert-manager-webhook-openprovider/opapi/models"
)

// DeleteZoneReader is a Reader for the DeleteZone structure.
type DeleteZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteZoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteZoneDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteZoneOK creates a DeleteZoneOK with default headers values
func NewDeleteZoneOK() *DeleteZoneOK {
	return &DeleteZoneOK{}
}

/*
DeleteZoneOK describes a response with status code 200, with default header values.

A successful response.
*/
type DeleteZoneOK struct {
	Payload *models.ZoneZoneBoolResponse
}

// IsSuccess returns true when this delete zone o k response has a 2xx status code
func (o *DeleteZoneOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete zone o k response has a 3xx status code
func (o *DeleteZoneOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete zone o k response has a 4xx status code
func (o *DeleteZoneOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete zone o k response has a 5xx status code
func (o *DeleteZoneOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete zone o k response a status code equal to that given
func (o *DeleteZoneOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete zone o k response
func (o *DeleteZoneOK) Code() int {
	return 200
}

func (o *DeleteZoneOK) Error() string {
	return fmt.Sprintf("[DELETE /v1beta/dns/zones/{name}][%d] deleteZoneOK  %+v", 200, o.Payload)
}

func (o *DeleteZoneOK) String() string {
	return fmt.Sprintf("[DELETE /v1beta/dns/zones/{name}][%d] deleteZoneOK  %+v", 200, o.Payload)
}

func (o *DeleteZoneOK) GetPayload() *models.ZoneZoneBoolResponse {
	return o.Payload
}

func (o *DeleteZoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZoneZoneBoolResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteZoneDefault creates a DeleteZoneDefault with default headers values
func NewDeleteZoneDefault(code int) *DeleteZoneDefault {
	return &DeleteZoneDefault{
		_statusCode: code,
	}
}

/*
DeleteZoneDefault describes a response with status code -1, with default header values.

(empty)
*/
type DeleteZoneDefault struct {
	_statusCode int

	Payload *models.ErrorError
}

// IsSuccess returns true when this delete zone default response has a 2xx status code
func (o *DeleteZoneDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete zone default response has a 3xx status code
func (o *DeleteZoneDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete zone default response has a 4xx status code
func (o *DeleteZoneDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete zone default response has a 5xx status code
func (o *DeleteZoneDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete zone default response a status code equal to that given
func (o *DeleteZoneDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete zone default response
func (o *DeleteZoneDefault) Code() int {
	return o._statusCode
}

func (o *DeleteZoneDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1beta/dns/zones/{name}][%d] DeleteZone default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteZoneDefault) String() string {
	return fmt.Sprintf("[DELETE /v1beta/dns/zones/{name}][%d] DeleteZone default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteZoneDefault) GetPayload() *models.ErrorError {
	return o.Payload
}

func (o *DeleteZoneDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
